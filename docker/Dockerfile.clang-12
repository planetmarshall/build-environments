FROM ubuntu:20.04

ARG CLANG_VERSION=12
ARG CLANG_SEMVER=12.0.1
ARG CMAKE_VERSION=3.21.1
ARG PYTHON_VERSION=3.9.2
ARG LLVM_PROJECTS="clang;clang-tools-extra;compiler-rt;libcxx;libcxxabi;lld;lldb;openmp;pstl"

ENV LLVM_VERSION=12.0 \
    CC=clang \
    CXX=clang++ \
    CMAKE_C_COMPILER=clang \
    CMAKE_CXX_COMPILER=clang++ \
    PYENV_ROOT=/opt/pyenv \
    PATH=/opt/pyenv/shims:${PATH} \
    PYTHONIOENCODING=utf-8

RUN apt-get update && \
    apt-get upgrade -y && \
    apt-get install -y --no-install-recommends \
        ca-certificates \
        curl \
        gnupg \
        software-properties-common \
        wget && \
    wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key|apt-key add - && \
    curl -s https://packagecloud.io/install/repositories/github/git-lfs/script.deb.sh | bash && \
    apt-add-repository "deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-${CLANG_VERSION} main" && \
    apt-get install -y --no-install-recommends \
        build-essential \
        clang-${CLANG_VERSION} \
        gfortran \
        git \
        git-lfs \
        libbz2-dev \
        libc++-${CLANG_VERSION}-dev \
        libc++abi-${CLANG_VERSION}-dev \
        libgfortran-8-dev \
        libgl1-mesa-dev \
        libgtk-3-dev \
        liblapack-dev  \
        liblzma-dev \
        libomp-${CLANG_VERSION}-dev \
        libreadline-dev \
        libsqlite3-dev \
        libssl-dev \
        libstdc++-8-dev \
        lld-${CLANG_VERSION} \
        lldb-${CLANG_VERSION} \
        m4 \
        make \
        ninja-build \
        nodejs \
        openssh-client \
        pkg-config \
        sudo \
        valgrind \
        zlib1g-dev \
        && \
    update-alternatives --install /usr/bin/clang++ clang++ /usr/bin/clang++-${CLANG_VERSION} 100 && \
    update-alternatives --install /usr/bin/clang clang /usr/bin/clang-${CLANG_VERSION} 100 && \
    update-alternatives --install /usr/bin/cc cc /usr/bin/clang-${CLANG_VERSION} 100 && \
    update-alternatives --install /usr/bin/c++ c++ /usr/bin/clang++-${CLANG_VERSION} 100 && \
    update-alternatives --install /usr/bin/cpp cpp /usr/bin/clang++-${CLANG_VERSION} 100 && \
    wget -O /tmp/cmake.tar.gz https://github.com/Kitware/CMake/releases/download/v${CMAKE_VERSION}/cmake-${CMAKE_VERSION}-Linux-x86_64.tar.gz && \
    tar -xvzf /tmp/cmake.tar.gz -C /usr/local/ --strip-components=1 \
       --exclude=bin/cmake-gui \
       --exclude=doc \
       --exclude=share/cmake-3.21/Help && \
    wget --no-check-certificate -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer && \
    chmod 755 /tmp/pyenv-installer && \
    /tmp/pyenv-installer && \
    update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100 && \
    PYTHON_CONFIGURE_OPTS="--enable-shared" pyenv install ${PYTHON_VERSION} && \
    pyenv global ${PYTHON_VERSION} && \
    pip install -q --upgrade --no-cache pip && \
    pip install -q --no-cache-dir wheel && \
    pip install -q --no-cache-dir \
        conan \
        pytest && \
    chmod --recursive a+w /opt/pyenv && \
    update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100 && \
    update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100 && \
    update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100 && \
    update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100 && \
    sed -i '1 s/python3/python3.6/' /usr/bin/lsb_release && \
    sed -i '1 s/python3/python3.6/' /usr/bin/apt-add-repository && \
    git config --global credential.helper store && \
    wget --no-check-certificate -O /tmp/llvm.tar.xz https://github.com/llvm/llvm-project/releases/download/llvmorg-${CLANG_SEMVER}/llvm-project-${CLANG_SEMVER}.src.tar.xz && \
    cd /tmp && \
    tar -xf llvm.tar.xz && \
    mkdir -p llvm-project-${CLANG_SEMVER}.src/build && \
    cd llvm-project-${CLANG_SEMVER}.src/build && \
    cmake \
        -DCMAKE_BUILD_TYPE=Release \
        -DLLVM_ENABLE_PROJECTS=${LLVM_PROJECTS} \
        -DLLVM_TARGETS_TO_BUILD="X86;NVPTX" \
        -DLLVM_BUILD_TOOLS=False \
        -DLLVM_BUILD_UTILS=False \
        -DLLVM_ENABLE_OCAMLDOC=False \
        -DLLVM_ENABLE_BINDINGS=False \
        -DLLVM_ENABLE_RTTI=ON \
        -G Ninja ../llvm && \
    cmake --build . --target install && \
    cd / && \
    rm -rf /tmp/* && \
    apt purge -y --autoremove \
        clang-${CLANG_VERSION} \
        libc++-${CLANG_VERSION}-dev \
        libc++abi-${CLANG_VERSION}-dev \
        libomp-${CLANG_VERSION}-dev \
        lld-${CLANG_VERSION} \
        lldb-${CLANG_VERSION} && \
    update-alternatives --install /usr/bin/cc cc /usr/local/bin/clang++ 100 && \
    update-alternatives --install /usr/bin/c++ c++ /usr/local/bin/clang++ 100 && \
    update-alternatives --install /usr/bin/cpp cpp /usr/local/bin/clang++ 100

USER root
